// AUTOGENERATED FROM index-windows-1256.txt, ORIGINAL COMMENT FOLLOWS:
//
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/
//
// For details on index-windows-1256.txt see the Encoding Standard
// http://encoding.spec.whatwg.org/

static FORWARD_TABLE: &'static [u16] = &[
    8364, 1662, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 1657, 8249, 338,
    1670, 1688, 1672, 1711, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 1705,
    8482, 1681, 8250, 339, 8204, 8205, 1722, 160, 1548, 162, 163, 164, 165,
    166, 167, 168, 169, 1726, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
    181, 182, 183, 184, 185, 1563, 187, 188, 189, 190, 1567, 1729, 1569, 1570,
    1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
    1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 215, 1591, 1592, 1593,
    1594, 1600, 1601, 1602, 1603, 224, 1604, 226, 1605, 1606, 1607, 1608, 231,
    232, 233, 234, 235, 1609, 1610, 238, 239, 1611, 1612, 1613, 1614, 244,
    1615, 1616, 247, 1617, 249, 1618, 251, 252, 8206, 8207, 1746,
];

#[inline]
pub fn forward(code: u8) -> u16 {
    FORWARD_TABLE[code as uint]
}

#[inline]
pub fn backward(code: u16) -> u8 {
    match code {
        8364 => 0, 1662 => 1, 8218 => 2, 402 => 3, 8222 => 4, 8230 => 5,
        8224 => 6, 8225 => 7, 710 => 8, 8240 => 9, 1657 => 10, 8249 => 11,
        338 => 12, 1670 => 13, 1688 => 14, 1672 => 15, 1711 => 16, 8216 => 17,
        8217 => 18, 8220 => 19, 8221 => 20, 8226 => 21, 8211 => 22, 8212 => 23,
        1705 => 24, 8482 => 25, 1681 => 26, 8250 => 27, 339 => 28, 8204 => 29,
        8205 => 30, 1722 => 31, 160 => 32, 1548 => 33, 162 => 34, 163 => 35,
        164 => 36, 165 => 37, 166 => 38, 167 => 39, 168 => 40, 169 => 41,
        1726 => 42, 171 => 43, 172 => 44, 173 => 45, 174 => 46, 175 => 47,
        176 => 48, 177 => 49, 178 => 50, 179 => 51, 180 => 52, 181 => 53,
        182 => 54, 183 => 55, 184 => 56, 185 => 57, 1563 => 58, 187 => 59,
        188 => 60, 189 => 61, 190 => 62, 1567 => 63, 1729 => 64, 1569 => 65,
        1570 => 66, 1571 => 67, 1572 => 68, 1573 => 69, 1574 => 70, 1575 => 71,
        1576 => 72, 1577 => 73, 1578 => 74, 1579 => 75, 1580 => 76, 1581 => 77,
        1582 => 78, 1583 => 79, 1584 => 80, 1585 => 81, 1586 => 82, 1587 => 83,
        1588 => 84, 1589 => 85, 1590 => 86, 215 => 87, 1591 => 88, 1592 => 89,
        1593 => 90, 1594 => 91, 1600 => 92, 1601 => 93, 1602 => 94, 1603 => 95,
        224 => 96, 1604 => 97, 226 => 98, 1605 => 99, 1606 => 100, 1607 => 101,
        1608 => 102, 231 => 103, 232 => 104, 233 => 105, 234 => 106,
        235 => 107, 1609 => 108, 1610 => 109, 238 => 110, 239 => 111,
        1611 => 112, 1612 => 113, 1613 => 114, 1614 => 115, 244 => 116,
        1615 => 117, 1616 => 118, 247 => 119, 1617 => 120, 249 => 121,
        1618 => 122, 251 => 123, 252 => 124, 8206 => 125, 8207 => 126,
        1746 => 127, _ => 255
    }
}

#[cfg(test)]
mod tests {
    use super::{forward, backward};

    #[test]
    fn test_correct_table() {
        for i in range(0u8, 128) {
            let j = forward(i);
            if j != 0xffff { assert_eq!(backward(j), i); }
        }
    }
}
