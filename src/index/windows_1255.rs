// AUTOGENERATED FROM index-windows-1255.txt, ORIGINAL COMMENT FOLLOWS:
//
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/
//
// For details on index-windows-1255.txt see the Encoding Standard
// http://encoding.spec.whatwg.org/

static FORWARD_TABLE: &'static [u16] = &[
    8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 138, 8249, 140,
    141, 142, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482,
    154, 8250, 156, 157, 158, 159, 160, 161, 162, 163, 8362, 165, 166, 167,
    168, 169, 215, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
    183, 184, 185, 247, 187, 188, 189, 190, 191, 1456, 1457, 1458, 1459, 1460,
    1461, 1462, 1463, 1464, 1465, 65535, 1467, 1468, 1469, 1470, 1471, 1472,
    1473, 1474, 1475, 1520, 1521, 1522, 1523, 1524, 65535, 65535, 65535, 65535,
    65535, 65535, 65535, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
    1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
    1509, 1510, 1511, 1512, 1513, 1514, 65535, 65535, 8206, 8207, 65535,
];

#[inline]
pub fn forward(code: u8) -> u16 {
    FORWARD_TABLE[code as uint]
}

#[inline]
pub fn backward(code: u16) -> u8 {
    match code {
        8364 => 0, 129 => 1, 8218 => 2, 402 => 3, 8222 => 4, 8230 => 5,
        8224 => 6, 8225 => 7, 710 => 8, 8240 => 9, 138 => 10, 8249 => 11,
        140 => 12, 141 => 13, 142 => 14, 143 => 15, 144 => 16, 8216 => 17,
        8217 => 18, 8220 => 19, 8221 => 20, 8226 => 21, 8211 => 22, 8212 => 23,
        732 => 24, 8482 => 25, 154 => 26, 8250 => 27, 156 => 28, 157 => 29,
        158 => 30, 159 => 31, 160 => 32, 161 => 33, 162 => 34, 163 => 35,
        8362 => 36, 165 => 37, 166 => 38, 167 => 39, 168 => 40, 169 => 41,
        215 => 42, 171 => 43, 172 => 44, 173 => 45, 174 => 46, 175 => 47,
        176 => 48, 177 => 49, 178 => 50, 179 => 51, 180 => 52, 181 => 53,
        182 => 54, 183 => 55, 184 => 56, 185 => 57, 247 => 58, 187 => 59,
        188 => 60, 189 => 61, 190 => 62, 191 => 63, 1456 => 64, 1457 => 65,
        1458 => 66, 1459 => 67, 1460 => 68, 1461 => 69, 1462 => 70, 1463 => 71,
        1464 => 72, 1465 => 73, 1467 => 75, 1468 => 76, 1469 => 77, 1470 => 78,
        1471 => 79, 1472 => 80, 1473 => 81, 1474 => 82, 1475 => 83, 1520 => 84,
        1521 => 85, 1522 => 86, 1523 => 87, 1524 => 88, 1488 => 96, 1489 => 97,
        1490 => 98, 1491 => 99, 1492 => 100, 1493 => 101, 1494 => 102,
        1495 => 103, 1496 => 104, 1497 => 105, 1498 => 106, 1499 => 107,
        1500 => 108, 1501 => 109, 1502 => 110, 1503 => 111, 1504 => 112,
        1505 => 113, 1506 => 114, 1507 => 115, 1508 => 116, 1509 => 117,
        1510 => 118, 1511 => 119, 1512 => 120, 1513 => 121, 1514 => 122,
        8206 => 125, 8207 => 126, _ => 255
    }
}

#[cfg(test)]
mod tests {
    use super::{forward, backward};

    #[test]
    fn test_correct_table() {
        for i in range(0u8, 128) {
            let j = forward(i);
            if j != 0xffff { assert_eq!(backward(j), i); }
        }
    }
}
