// AUTOGENERATED FROM index-windows-1250.txt, ORIGINAL COMMENT FOLLOWS:
//
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/
//
// For details on index-windows-1250.txt see the Encoding Standard
// http://encoding.spec.whatwg.org/

static FORWARD_TABLE: &'static [u16] = &[
    8364, 129, 8218, 131, 8222, 8230, 8224, 8225, 136, 8240, 352, 8249, 346,
    356, 381, 377, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 152, 8482,
    353, 8250, 347, 357, 382, 378, 160, 711, 728, 321, 164, 260, 166, 167, 168,
    169, 350, 171, 172, 173, 174, 379, 176, 177, 731, 322, 180, 181, 182, 183,
    184, 261, 351, 187, 317, 733, 318, 380, 340, 193, 194, 258, 196, 313, 262,
    199, 268, 201, 280, 203, 282, 205, 206, 270, 272, 323, 327, 211, 212, 336,
    214, 215, 344, 366, 218, 368, 220, 221, 354, 223, 341, 225, 226, 259, 228,
    314, 263, 231, 269, 233, 281, 235, 283, 237, 238, 271, 273, 324, 328, 243,
    244, 337, 246, 247, 345, 367, 250, 369, 252, 253, 355, 729,
];

#[inline]
pub fn forward(code: u8) -> u16 {
    FORWARD_TABLE[code as uint]
}

#[inline]
pub fn backward(code: u16) -> u8 {
    match code {
        8364 => 0, 129 => 1, 8218 => 2, 131 => 3, 8222 => 4, 8230 => 5,
        8224 => 6, 8225 => 7, 136 => 8, 8240 => 9, 352 => 10, 8249 => 11,
        346 => 12, 356 => 13, 381 => 14, 377 => 15, 144 => 16, 8216 => 17,
        8217 => 18, 8220 => 19, 8221 => 20, 8226 => 21, 8211 => 22, 8212 => 23,
        152 => 24, 8482 => 25, 353 => 26, 8250 => 27, 347 => 28, 357 => 29,
        382 => 30, 378 => 31, 160 => 32, 711 => 33, 728 => 34, 321 => 35,
        164 => 36, 260 => 37, 166 => 38, 167 => 39, 168 => 40, 169 => 41,
        350 => 42, 171 => 43, 172 => 44, 173 => 45, 174 => 46, 379 => 47,
        176 => 48, 177 => 49, 731 => 50, 322 => 51, 180 => 52, 181 => 53,
        182 => 54, 183 => 55, 184 => 56, 261 => 57, 351 => 58, 187 => 59,
        317 => 60, 733 => 61, 318 => 62, 380 => 63, 340 => 64, 193 => 65,
        194 => 66, 258 => 67, 196 => 68, 313 => 69, 262 => 70, 199 => 71,
        268 => 72, 201 => 73, 280 => 74, 203 => 75, 282 => 76, 205 => 77,
        206 => 78, 270 => 79, 272 => 80, 323 => 81, 327 => 82, 211 => 83,
        212 => 84, 336 => 85, 214 => 86, 215 => 87, 344 => 88, 366 => 89,
        218 => 90, 368 => 91, 220 => 92, 221 => 93, 354 => 94, 223 => 95,
        341 => 96, 225 => 97, 226 => 98, 259 => 99, 228 => 100, 314 => 101,
        263 => 102, 231 => 103, 269 => 104, 233 => 105, 281 => 106, 235 => 107,
        283 => 108, 237 => 109, 238 => 110, 271 => 111, 273 => 112, 324 => 113,
        328 => 114, 243 => 115, 244 => 116, 337 => 117, 246 => 118, 247 => 119,
        345 => 120, 367 => 121, 250 => 122, 369 => 123, 252 => 124, 253 => 125,
        355 => 126, 729 => 127, _ => 255
    }
}

#[cfg(test)]
mod tests {
    use super::{forward, backward};

    #[test]
    fn test_correct_table() {
        for i in range(0u8, 128) {
            let j = forward(i);
            if j != 0xffff { assert_eq!(backward(j), i); }
        }
    }
}
