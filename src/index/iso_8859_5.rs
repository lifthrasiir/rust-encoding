// AUTOGENERATED FROM index-iso-8859-5.txt, ORIGINAL COMMENT FOLLOWS:
//
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/
//
// For details on index-iso-8859-5.txt see the Encoding Standard
// http://encoding.spec.whatwg.org/

static FORWARD_TABLE: &'static [u16] = &[
    128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
    143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
    158, 159, 160, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
    1035, 1036, 173, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
    1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
    1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
    1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
    1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
    1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 8470, 1105, 1106,
    1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 167, 1118,
    1119,
];

#[inline]
pub fn forward(code: u8) -> u16 {
    FORWARD_TABLE[code as uint]
}

#[inline]
pub fn backward(code: u16) -> u8 {
    match code {
        128 => 0, 129 => 1, 130 => 2, 131 => 3, 132 => 4, 133 => 5, 134 => 6,
        135 => 7, 136 => 8, 137 => 9, 138 => 10, 139 => 11, 140 => 12,
        141 => 13, 142 => 14, 143 => 15, 144 => 16, 145 => 17, 146 => 18,
        147 => 19, 148 => 20, 149 => 21, 150 => 22, 151 => 23, 152 => 24,
        153 => 25, 154 => 26, 155 => 27, 156 => 28, 157 => 29, 158 => 30,
        159 => 31, 160 => 32, 1025 => 33, 1026 => 34, 1027 => 35, 1028 => 36,
        1029 => 37, 1030 => 38, 1031 => 39, 1032 => 40, 1033 => 41, 1034 => 42,
        1035 => 43, 1036 => 44, 173 => 45, 1038 => 46, 1039 => 47, 1040 => 48,
        1041 => 49, 1042 => 50, 1043 => 51, 1044 => 52, 1045 => 53, 1046 => 54,
        1047 => 55, 1048 => 56, 1049 => 57, 1050 => 58, 1051 => 59, 1052 => 60,
        1053 => 61, 1054 => 62, 1055 => 63, 1056 => 64, 1057 => 65, 1058 => 66,
        1059 => 67, 1060 => 68, 1061 => 69, 1062 => 70, 1063 => 71, 1064 => 72,
        1065 => 73, 1066 => 74, 1067 => 75, 1068 => 76, 1069 => 77, 1070 => 78,
        1071 => 79, 1072 => 80, 1073 => 81, 1074 => 82, 1075 => 83, 1076 => 84,
        1077 => 85, 1078 => 86, 1079 => 87, 1080 => 88, 1081 => 89, 1082 => 90,
        1083 => 91, 1084 => 92, 1085 => 93, 1086 => 94, 1087 => 95, 1088 => 96,
        1089 => 97, 1090 => 98, 1091 => 99, 1092 => 100, 1093 => 101,
        1094 => 102, 1095 => 103, 1096 => 104, 1097 => 105, 1098 => 106,
        1099 => 107, 1100 => 108, 1101 => 109, 1102 => 110, 1103 => 111,
        8470 => 112, 1105 => 113, 1106 => 114, 1107 => 115, 1108 => 116,
        1109 => 117, 1110 => 118, 1111 => 119, 1112 => 120, 1113 => 121,
        1114 => 122, 1115 => 123, 1116 => 124, 167 => 125, 1118 => 126,
        1119 => 127, _ => 255
    }
}

#[cfg(test)]
mod tests {
    use super::{forward, backward};

    #[test]
    fn test_correct_table() {
        for i in range(0u8, 128) {
            let j = forward(i);
            if j != 0xffff { assert_eq!(backward(j), i); }
        }
    }
}
